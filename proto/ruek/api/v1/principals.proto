syntax = "proto3";

package ruek.api.v1;

import "google/protobuf/struct.proto";

option go_package = "github.com/uatuko/ruek/proto/.gen/go/ruekpb;ruekpb";

service Principals {
	rpc Create(PrincipalsCreateRequest) returns (PrincipalsCreateResponse);
	rpc Delete(PrincipalsDeleteRequest) returns (PrincipalsDeleteResponse);
	rpc List(PrincipalsListRequest) returns (PrincipalsListResponse);
	rpc Retrieve(PrincipalsRetrieveRequest) returns (PrincipalsRetrieveResponse);
	rpc Update(PrincipalsUpdateRequest) returns (PrincipalsUpdateResponse);
}

message Principal {
	string id = 1;

	optional google.protobuf.Struct attrs   = 2;
	optional string                 segment = 3;
}

message PrincipalsCreateRequest {
	optional string id = 1;

	optional google.protobuf.Struct attrs   = 2;
	optional string                 segment = 3;
}

message PrincipalsCreateResponse {
	Principal principal = 1;
}

message PrincipalsDeleteRequest {
	string id = 1;

	// Limits the delete cost. The value must be within `1` and `65535`. Defaults to `1000`.
	optional uint32 cost_limit = 2;
}

message PrincipalsDeleteResponse {
	// Cost of delete. A negative cost indicates the delete cost exceeded the limit and the delete
	// action was aborted.
	int32 cost = 1;

	// List of relation tuple ids that were referencing the deleted principal but failed to delete.
	// The caller must delete these tuples to ensure data consistency.
	repeated string failed_tuple_ids = 2;
}

message PrincipalsListRequest {
	optional string segment = 1;

	optional uint32 pagination_limit = 2;
	optional string pagination_token = 3;
}

message PrincipalsListResponse {
	repeated Principal principals = 1;

	optional string pagination_token = 2;
}

message PrincipalsRetrieveRequest {
	string id = 1;
}

message PrincipalsRetrieveResponse {
	Principal principal = 1;
}

message PrincipalsUpdateRequest {
	string id = 1;

	optional google.protobuf.Struct attrs   = 2;
	optional string                 segment = 3;
}

message PrincipalsUpdateResponse {
	Principal principal = 1;
}
